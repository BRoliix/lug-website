
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // By default, deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Check if the user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can read user profiles (for council page, etc.)
      allow read: if request.auth != null;
      
      // A user can create their own document on signup
      allow create: if request.auth.uid == userId;

      // A user can update their own profile, but cannot make themselves an admin or council member.
      // Admins can update any user.
      allow update: if (request.auth.uid == userId && !("isAdmin" in request.resource.data) && !("isCouncilMember" in request.resource.data)) || isAdmin();
    }

    // Rules for the 'events' collection
    match /events/{eventId} {
      // Anyone can read events
      allow read: if request.auth != null;
      
      // Only admins can create, update, or delete events
      allow write: if isAdmin();
    }
    
    // Rules for the 'messages' (forum) collection
    match /messages/{messageId} {
        // Any authenticated user can read messages
        allow read: if request.auth != null;
        
        // Any authenticated user can create a message
        allow create: if request.auth != null;
        
        // Only admins can delete messages
        allow delete: if isAdmin();
    }

    // Rules for the 'reports' (bug reports) collection
    match /reports/{reportId} {
      // Only admins can read all reports
      allow read: if isAdmin();
      
      // Any authenticated user can create a report
      allow create: if request.auth != null;

      // Only admins can update (e.g., change status) or delete reports
      allow update, delete: if isAdmin();
    }
  }
}
