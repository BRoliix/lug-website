
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Admins have full access to everything
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users can read their own data and update certain fields
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow read, write: if isAdmin();
    }

    // Council members are public
    match /users/{userId} {
        allow get: if true;
        // This rule is for the query in the council page
        allow list: if true;
    }

    // Events are public
    match /events/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Messages can be created by any authenticated user, but only read by admins or members.
    // Deletion is admin-only.
    match /messages/{messageId} {
      allow read: if request.auth != null && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.subscriptionStatus == 'active' || isAdmin());
      allow create: if request.auth != null;
      allow delete: if isAdmin();
    }
    
    // Reports can be created by authenticated users, but only managed by admins
    match /reports/{reportId} {
        allow create: if request.auth != null;
        allow read, write, delete: if isAdmin();
    }
    
    // Activity logs can only be read/written by the user themselves or an admin
    match /activities/{activityId} {
        allow read, create: if request.auth.uid == resource.data.userId || isAdmin();
    }
    
    // Members collection is admin-only
    match /members/{memberId} {
        allow read, write: if isAdmin();
    }
  }
}
