
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions to check user roles
    function isUserAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isAdmin() {
      // Check the user's custom claim or a field in their user document
      return isUserAuthenticated() && getUserData(request.auth.uid).isAdmin == true;
    }
    
    function isSubscriber() {
       return isUserAuthenticated() && getUserData(request.auth.uid).subscriptionStatus == 'active';
    }

    // Settings can be read by anyone, but only written by admins.
    match /settings/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Users can read/update their own data. Admins can read/write any user data.
    match /users/{userId} {
      allow get: if isUserAuthenticated();
      allow list: if isAdmin();
      allow update: if isOwner(userId) || isAdmin();
      // Only admins can create or delete user documents directly.
      allow create, delete: if isAdmin(); 
    }
    
    // Events can be read by anyone. Only admins can create, update, or delete them.
    match /events/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Forum messages can be read by subscribers. Users can only create their own messages.
    // Admins can delete any message.
    match /messages/{messageId} {
      allow read: if isSubscriber() || isAdmin();
      allow create: if isUserAuthenticated() 
                    && request.resource.data.user == request.auth.token.name
                    && request.resource.data.avatarUrl == request.auth.token.picture;
      allow delete: if isAdmin();
    }
    
    // Members collection is for active subscribers. Read-only for users, writable for admins.
    match /members/{memberId} {
      allow read: if isUserAuthenticated();
      allow write: if isAdmin();
    }
    
    // Bug reports can be created by any authenticated user.
    // Only admins can view, update, or delete them.
    match /reports/{reportId} {
        allow read, update, delete: if isAdmin();
        allow create: if isUserAuthenticated() 
                      && request.resource.data.userId == request.auth.uid;
    }
    
    // Activity logs: users can only create their own activity logs.
    // Admins can read logs.
    match /activities/{activityId} {
        allow list: if isAdmin();
        allow create: if isUserAuthenticated()
                      && request.resource.data.userId == request.auth.uid;
        // No one can read a single log directly, update or delete for security.
        allow get, update, delete: if false;
    }
  }
}
