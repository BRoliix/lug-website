rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Users Collection
    match /users/{userId} {
      // Admins can read/write any user document.
      // Authenticated users can read/write their own document.
      // Anyone can read any user document (for council page, etc.).
      allow read: if true;
      allow write: if isAdmin() || request.auth.uid == userId;
    }

    // Events Collection
    // Admins can create, update, delete events.
    // Anyone (even unauthenticated users) can read events.
    match /events/{eventId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Messages Collection
    // Admins can read/delete any message.
    // Authenticated users can read all messages and create new ones.
    match /messages/{messageId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow delete: if isAdmin();
    }
    
    // Reports Collection
    // Admins can manage all reports.
    // Any authenticated user can create a report.
    match /reports/{reportId} {
        allow read, write: if isAdmin();
        allow create: if isAuthenticated();
    }
    
    // Activities Collection
    // Admins can read any activity log.
    // Authenticated users can only read or write to their own activity log.
    match /activities/{activityId} {
        allow read, write: if isAdmin() || request.auth.uid == resource.data.userId;
    }
    
    // Members Collection
    // Only admins can read or write to the members list.
    match /members/{memberId} {
        allow read, write: if isAdmin();
    }
  }
}