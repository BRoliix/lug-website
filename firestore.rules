rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isAdmin() {
      // Ensure the user document exists before trying to access its data
      return isSignedIn() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && getUserData(request.auth.uid).isAdmin == true;
    }

    function isActiveMember() {
      return isSignedIn() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && getUserData(request.auth.uid).subscriptionStatus == 'active';
    }

    match /users/{userId} {
      allow read;
      allow update: if isUser(userId) || isAdmin();
    }
    
    match /settings/featureFlags {
        allow read;
        allow write: if isAdmin();
    }
    
    match /events/{eventId} {
        allow read;
        allow create, update, delete: if isAdmin();
    }
    
    match /messages/{messageId} {
        allow read, create, delete: if isActiveMember() || isAdmin();
    }
    
    match /reports/{reportId} {
        allow read, create, update, delete: if isSignedIn();
    }
    
    match /activities/{activityId} {
        allow read: if isAdmin();
        allow create: if isSignedIn();
    }
    
    match /members/{memberId} {
        allow read: if isAdmin();
        allow create, update: if isAdmin();
    }
  }
}
