rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      // Check the resource being requested OR the user's own document
      // This is crucial for checking permissions when the user document itself is the target
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Public read, admin write
    match /events/{eventId} {
      allow read: if true;
      allow write: if isSignedIn() && isAdmin();
    }
    
    // Authenticated read/write, admin delete
    match /messages/{messageId} {
      allow read, write: if isSignedIn();
      allow delete: if isSignedIn() && isAdmin();
    }

    match /users/{userId} {
      // Authenticated users can read user profiles.
      allow read: if isSignedIn();
      
      // Users can create their own profile document.
      allow create: if isOwner(userId);
      
      // Users can update their own profile, or an admin can update any profile.
      allow update: if isSignedIn() && (isOwner(userId) || isAdmin());
      
      // Only admins can delete user documents.
      allow delete: if isSignedIn() && isAdmin();
    }
  }
}
