
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Users collection rules
    match /users/{userId} {
      // Anyone authenticated can read user profiles (for council page, etc.)
      allow read: if isAuthenticated();

      // A user can create their own document
      allow create: if request.auth.uid == userId;

      // A user can update their own profile, but cannot make themselves an admin or council member
      // Admins can update any user profile
      allow update: if (request.auth.uid == userId && !("isAdmin" in request.resource.data)) || isAdmin();
      
      // Only admins can delete users
      allow delete: if isAdmin();
    }

    // Events collection rules
    match /events/{eventId} {
      // Anyone can read events
      allow read: if isAuthenticated();
      
      // Only admins can create, update, or delete events
      allow write: if isAdmin();
    }

    // Messages collection rules
    match /messages/{messageId} {
      // Anyone authenticated can read messages
      allow read: if isAuthenticated();
      
      // Anyone authenticated can create a message
      allow create: if isAuthenticated();
      
      // Only admins can delete messages
      allow delete: if isAdmin();
    }
    
    // Reports collection rules
    match /reports/{reportId} {
        // Anyone authenticated can create a report
        allow create: if isAuthenticated();

        // Only admins can read, update (status), or delete reports
        allow read, update, delete: if isAdmin();
    }
  }
}
