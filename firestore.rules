rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to improve readability
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAppAdmin() {
        // Checks for a custom claim on the user's auth token.
        // This is more secure than checking a field in the database.
        return request.auth.token.isAdmin == true;
    }

    function getRole() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    match /users/{userId} {
      // Anyone can see who is a council member.
      allow get: if isSignedIn();
      // Any authenticated user can see the list of council members.
      allow list: if isSignedIn();

      // A user can create their own profile.
      allow create: if isOwner(userId);
      
      // A user can update their own profile, but not change their roles.
      // An admin can update anything.
      allow update: if (isOwner(userId) && !("isAdmin" in request.resource.data) && !("isCouncilMember" in request.resource.data)) || isAppAdmin();
      
      // Only an admin can delete a user.
      allow delete: if isAppAdmin();
    }
    
    match /events/{eventId} {
      // Anyone can read events.
      allow get, list: if isSignedIn();
      
      // Only admins can create, update, or delete events.
      allow write: if isAppAdmin();
    }
    
    match /messages/{messageId} {
      // Any signed-in user can read and create messages.
      allow list, get, create: if isSignedIn();

      // Only an admin can delete messages.
      allow delete: if isAppAdmin();
    }
    
    match /reports/{reportId} {
        // The reportBugFlow runs on the server, so it won't be authenticated as a user.
        // For now, we'll allow any create operation on the reports collection.
        // In a production app, you'd want to secure this with a service account or other mechanism.
        allow create: if true; 

        // Admins can read, update, and delete reports.
        allow get, list, update, delete: if isAppAdmin();
    }
  }
}
