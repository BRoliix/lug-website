rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null;
    }
    
    function isExistingUser(userId) {
      return exists(/databases/$(database)/documents/users/$(userId));
    }
    
    function getRequestingUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function isRequestingUserAdmin() {
      return isUserAuthenticated() && getRequestingUserData().isAdmin == true;
    }
    
    // USERS collection
    match /users/{userId} {
      // Anyone can create their own user document on signup
      allow create: if isUserAuthenticated() && request.auth.uid == userId;
      
      // Any authenticated user can read any other user's profile (for names, avatars, etc.)
      // Admins can read any profile.
      allow get: if isUserAuthenticated() || isRequestingUserAdmin();

      // Users can update their own document. Admins can update any document.
      allow update: if (isUserAuthenticated() && request.auth.uid == userId) || isRequestingUserAdmin();
      
      // Only admins can delete users.
      allow delete: if isRequestingUserAdmin();
      
      // Admins can list all users.
      // Logged-in users can query for council members.
      allow list: if isRequestingUserAdmin() 
                  || (isUserAuthenticated() && request.query.where[0][0] == 'isCouncilMember');
    }
    
    // EVENTS collection
    match /events/{eventId} {
      // Anyone can read events.
      allow get, list: if true;
      
      // Only admins can create, update, or delete events.
      allow write: if isRequestingUserAdmin();
    }
    
    // MESSAGES (Forum) collection
    match /messages/{messageId} {
        // Anyone can read forum messages
        allow get, list: if true;
        
        // Only authenticated users can create messages
        allow create: if isUserAuthenticated();
        
        // Only admins can delete messages
        allow delete: if isRequestingUserAdmin();
        
        // Nobody can update messages to ensure immutability
        allow update: if false;
    }
  }
}
