
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for Admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users Collection
    match /users/{userId} {
      // READ: Any authenticated user can read public user profiles
      allow read: if request.auth != null;
      
      // CREATE: A user can create their own document
      allow create: if request.auth.uid == userId;

      // UPDATE: 
      // A user can update their own non-sensitive info
      allow update: if request.auth.uid == userId && !("isAdmin" in request.resource.data);
      // An admin can update any user's document (including roles)
      allow update: if isAdmin();

      // DELETE: Only admins can delete users
      allow delete: if isAdmin();
    }

    // Events Collection
    match /events/{eventId} {
      // READ: Any authenticated user can read events
      allow read: if request.auth != null;

      // WRITE (Create, Update, Delete): Only admins can write to events
      allow write: if isAdmin();
    }

    // Messages Collection
    match /messages/{messageId} {
      // READ, LIST: Any authenticated user can read chat messages
      allow get, list: if request.auth != null;

      // CREATE: Any authenticated user can create a message
      allow create: if request.auth != null;

      // DELETE: Only admins can delete messages
      allow delete: if isAdmin();
    }

    // Reports Collection
    match /reports/{reportId} {
      // READ, UPDATE, DELETE: Only admins can manage reports
      allow get, list, update, delete: if isAdmin();
      
      // CREATE: Any authenticated user can create a new report
      allow create: if request.auth != null;
    }
  }
}
