
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Users Collection
    match /users/{userId} {
      allow create: if isAuth(); // Allow user creation on signup
      allow read: if isAuth();   // Allow reading user profiles (for council page, etc.)
      
      // Allow users to update their own non-sensitive info
      allow update: if isOwner(userId) && !('isAdmin' in request.resource.data) && !('isCouncilMember' in request.resource.data);
      
      // Allow admins to update anything (including roles)
      allow update, delete: if isAdmin();
    }

    // Events Collection
    match /events/{eventId} {
      allow read: if isAuth();
      allow write: if isAdmin(); // Only admins can create, update, delete events
    }

    // Messages Collection
    match /messages/{messageId} {
      allow read, create: if isAuth();
      allow delete: if isAdmin(); // Only admins can delete messages
    }
    
    // Reports Collection
    match /reports/{reportId} {
      allow create: if isAuth();
      // Only admins can read, update status, or delete reports
      allow read, update, delete: if isAdmin();
    }
  }
}
