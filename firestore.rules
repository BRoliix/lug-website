
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin privileges
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // By default, deny all access
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can read public data, their own data, and be created
    match /users/{userId} {
      // Anyone authenticated can view user profiles (for council page, etc.)
      allow get: if request.auth != null;
      // Anyone can create their own user document during sign-up
      allow create: if request.auth.uid == userId;
      // Users can update their own profile, but cannot make themselves admin or council member
      allow update: if request.auth.uid == userId
                    && request.resource.data.isAdmin == resource.data.isAdmin
                    && request.resource.data.isCouncilMember == resource.data.isCouncilMember;
      // Admins can manage all user profiles
      allow list, write: if isAdmin();
    }
    
    // Events can be read by anyone, but only managed by admins
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Messages can be read and created by any authenticated user
    // Deletion is restricted to admins
    match /messages/{messageId} {
      allow read, create: if request.auth != null;
      allow delete: if isAdmin();
    }
    
    // Reports can be created by authenticated users
    // They can only be managed (read, updated, deleted) by admins
    match /reports/{reportId} {
        allow create: if request.auth != null;
        allow read, update, delete: if isAdmin();
    }
  }
}
