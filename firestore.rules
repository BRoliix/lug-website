rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Helper function to check if a user is an active member
    function isActiveMember() {
        return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.subscriptionStatus == 'active';
    }

    // Settings are readable by all, but only writable by admins.
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Events are readable by all active members, but only writable by admins.
    match /events/{eventId} {
      allow read: if isActiveMember() || isAdmin();
      allow write: if isAdmin();
    }

    // Users can read/update their own data. Admins can read/write any user data.
    // Council members list is public.
    match /users/{userId} {
      allow get: if request.auth != null;
      allow list: if true; // Allows querying for council members
      allow update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
    }
    
    // Members collection is private, only accessible by admins.
    match /members/{memberId} {
        allow read, write: if isAdmin();
    }

    // Messages are for active members. Admins can moderate.
    match /messages/{messageId} {
      allow read, create: if isActiveMember() || isAdmin();
      allow update, delete: if isAdmin();
    }
    
    // Reports can be created by any authenticated user, but only managed by admins.
    match /reports/{reportId} {
        allow create: if request.auth != null;
        allow read, update, delete: if isAdmin();
    }
    
    // Activity logs are private to the user and admins.
    match /activities/{activityId} {
        allow read: if request.auth.uid == resource.data.userId || isAdmin();
        allow create: if request.auth.uid == request.resource.data.userId;
        allow update, delete: if false; // Activities should be immutable
    }
  }
}
