rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Helper function to check if a user is an active, subscribed member
    function isMember() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.subscriptionStatus == 'active';
    }

    // Users can read/update their own profile. Admins can read/update any profile.
    // Any authenticated user can create their own user document.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
    }

    // Authenticated and subscribed members can read events. Admins can do anything.
    match /events/{eventId} {
      allow read: if request.auth != null && isMember() || isAdmin();
      allow create, update, delete: if isAdmin();
    }
    
    // Authenticated and subscribed members can read/create messages. Users can delete their own. Admins can delete any.
    match /messages/{messageId} {
      allow read, create: if request.auth != null && isMember() || isAdmin();
      allow delete: if isAdmin() || (request.auth != null && resource.data.user == request.auth.token.name);
    }
    
    // Authenticated users can create reports. Admins can read/update/delete any.
    match /reports/{reportId} {
      allow create: if request.auth != null;
      allow read, update, delete: if isAdmin();
    }
    
    // Settings can be read by any authenticated user (for feature flags). Only admins can write.
    match /settings/{settingId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // Users can create their own activity logs. Admins can read any.
    match /activities/{activityId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read: if isAdmin() || request.auth.uid == resource.data.userId;
    }

    // Admins can manage member documents.
    match /members/{memberId} {
        allow read, write: if isAdmin();
    }

    // By default, deny all other access.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
