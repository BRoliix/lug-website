
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function getRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    
    function isAdmin() {
      // Check if the user is an admin.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users Collection
    match /users/{userId} {
      // Anyone can create their own user document (sign up)
      allow create: if isSignedIn() && isOwner(userId);
      // Only owners or admins can update a user. Everyone can read.
      allow read: if isSignedIn();
      allow update: if isSignedIn() && (isOwner(userId) || isAdmin());
      // Only admins can delete users.
      allow delete: if isAdmin();
    }

    // Events Collection
    match /events/{eventId} {
      // Anyone can read events. Only admins can create, update, or delete them.
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Messages (Forum) Collection
    match /messages/{messageId} {
        // Any signed-in user can read or create messages.
        allow read, create: if isSignedIn();
        // Only admins can delete messages.
        allow delete: if isAdmin();
    }
  }
}
